<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>exc_page_fault (241,936,142,042 samples, 0.84%)</title><rect x="1175.3" y="405" width="9.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1178.28" y="415.5" ></text>
</g>
<g >
<title>__mcount_internal (931,133,855,211 samples, 3.23%)</title><rect x="56.7" y="373" width="38.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="59.70" y="383.5" >__m..</text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::__gmp_expr (3,026,890,038 samples, 0.01%)</title><rect x="1154.2" y="421" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1157.18" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,571,944,486 samples, 0.01%)</title><rect x="238.9" y="293" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="241.93" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (7,700,415,863 samples, 0.03%)</title><rect x="952.4" y="293" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="955.39" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,443,537,594 samples, 0.01%)</title><rect x="56.6" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="59.57" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,766,055,980 samples, 0.01%)</title><rect x="337.8" y="293" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="340.80" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (196,258,673,549 samples, 0.68%)</title><rect x="1176.2" y="357" width="8.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1179.16" y="367.5" ></text>
</g>
<g >
<title>do_group_exit (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="325" width="2.7" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1188.75" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (15,143,729,881 samples, 0.05%)</title><rect x="952.4" y="309" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="955.39" y="319.5" ></text>
</g>
<g >
<title>__mcount_internal (31,885,867,803 samples, 0.11%)</title><rect x="1130.1" y="357" width="1.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1133.05" y="367.5" ></text>
</g>
<g >
<title>__mcount_internal (23,328,002,052 samples, 0.08%)</title><rect x="1132.1" y="293" width="0.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1135.07" y="303.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,613,146,533 samples, 0.02%)</title><rect x="1186.5" y="117" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1189.51" y="127.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2,468,966,250 samples, 0.01%)</title><rect x="1127.5" y="325" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1130.51" y="335.5" ></text>
</g>
<g >
<title>uncharge_folio (3,054,730,213 samples, 0.01%)</title><rect x="1187.2" y="69" width="0.1" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1190.18" y="79.5" ></text>
</g>
<g >
<title>_mcount (5,423,990,420 samples, 0.02%)</title><rect x="1156.1" y="373" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1159.08" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (28,017,955,909 samples, 0.10%)</title><rect x="1164.3" y="357" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1167.26" y="367.5" ></text>
</g>
<g >
<title>_mcount (11,192,704,332 samples, 0.04%)</title><rect x="953.0" y="341" width="0.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="956.02" y="351.5" ></text>
</g>
<g >
<title>__do_sys_brk (8,857,336,484 samples, 0.03%)</title><rect x="1145.6" y="357" width="0.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1148.55" y="367.5" ></text>
</g>
<g >
<title>exc_page_fault (7,216,505,965 samples, 0.03%)</title><rect x="1189.7" y="405" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1192.69" y="415.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (4,811,652,146 samples, 0.02%)</title><rect x="1171.1" y="213" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1174.10" y="223.5" ></text>
</g>
<g >
<title>__mcount_internal (14,756,928,621 samples, 0.05%)</title><rect x="1155.5" y="373" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1158.48" y="383.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;, __gmp_binary_plus&gt; &gt;::__gmp_expr (1,077,754,776,676 samples, 3.74%)</title><rect x="95.1" y="373" width="44.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="98.11" y="383.5" >__gm..</text>
</g>
<g >
<title>handle_pte_fault (182,844,822,424 samples, 0.63%)</title><rect x="1176.7" y="341" width="7.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1179.70" y="351.5" ></text>
</g>
<g >
<title>__folio_throttle_swaprate (7,267,265,723 samples, 0.03%)</title><rect x="1177.4" y="309" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1180.37" y="319.5" ></text>
</g>
<g >
<title>__mcount_internal (16,422,515,183 samples, 0.06%)</title><rect x="1131.4" y="309" width="0.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1134.39" y="319.5" ></text>
</g>
<g >
<title>__mcount_internal (20,064,940,232 samples, 0.07%)</title><rect x="1127.9" y="341" width="0.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1130.86" y="351.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; (96,098,425,452 samples, 0.33%)</title><rect x="1132.1" y="309" width="3.9" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1135.07" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3,412,917,869 samples, 0.01%)</title><rect x="1127.4" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1130.36" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="421" width="2.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1188.75" y="431.5" ></text>
</g>
<g >
<title>update_process_times (4,848,033,839 samples, 0.02%)</title><rect x="952.5" y="213" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="955.48" y="223.5" ></text>
</g>
<g >
<title>__gmp_mt_recalc_buffer (19,732,999,846 samples, 0.07%)</title><rect x="1147.9" y="437" width="0.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1150.93" y="447.5" ></text>
</g>
<g >
<title>__mcount_internal (990,174,400,516 samples, 3.44%)</title><rect x="572.8" y="325" width="40.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="575.77" y="335.5" >__m..</text>
</g>
<g >
<title>__gmp_expr&lt;__gmp_resolve_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::value_type, __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; operator*&lt;__mpf_struct [1], __mpf_struct [1], __mpf_struct [1], __mpf_struct [1]&gt; (35,521,172,664 samples, 0.12%)</title><rect x="1127.9" y="373" width="1.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1130.86" y="383.5" ></text>
</g>
<g >
<title>free_unref_page_commit (9,293,542,254 samples, 0.03%)</title><rect x="1187.5" y="69" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1190.45" y="79.5" ></text>
</g>
<g >
<title>rmqueue (9,394,852,611 samples, 0.03%)</title><rect x="1183.3" y="245" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1186.32" y="255.5" ></text>
</g>
<g >
<title>all (28,805,988,370,428 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7,758,682,253 samples, 0.03%)</title><rect x="1189.7" y="421" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.67" y="431.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,143,964,439 samples, 0.02%)</title><rect x="1189.7" y="373" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.71" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,247,070,138 samples, 0.02%)</title><rect x="238.9" y="341" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="241.93" y="351.5" ></text>
</g>
<g >
<title>get_signal (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="341" width="2.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1188.75" y="351.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (9,480,432,647 samples, 0.03%)</title><rect x="1184.4" y="373" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1187.44" y="383.5" ></text>
</g>
<g >
<title>__mcount_internal (17,907,980,273 samples, 0.06%)</title><rect x="1129.3" y="341" width="0.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1132.32" y="351.5" ></text>
</g>
<g >
<title>do_user_addr_fault (227,022,937,454 samples, 0.79%)</title><rect x="1175.6" y="389" width="9.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1178.59" y="399.5" ></text>
</g>
<g >
<title>__mmput (66,056,614,803 samples, 0.23%)</title><rect x="1185.8" y="261" width="2.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1188.75" y="271.5" ></text>
</g>
<g >
<title>__gmpn_copyi (2,794,137,506 samples, 0.01%)</title><rect x="240.3" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="243.31" y="335.5" ></text>
</g>
<g >
<title>__gmp_default_allocate (12,376,115,108 samples, 0.04%)</title><rect x="1154.6" y="405" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1157.64" y="415.5" ></text>
</g>
<g >
<title>do_user_addr_fault (6,746,300,678 samples, 0.02%)</title><rect x="1189.7" y="389" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1192.70" y="399.5" ></text>
</g>
<g >
<title>exit_mm (66,057,659,097 samples, 0.23%)</title><rect x="1185.8" y="293" width="2.7" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1188.75" y="303.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3,077,270,979 samples, 0.01%)</title><rect x="1186.6" y="101" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1189.58" y="111.5" ></text>
</g>
<g >
<title>__mcount_internal (19,992,626,068 samples, 0.07%)</title><rect x="1142.8" y="341" width="0.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1145.80" y="351.5" ></text>
</g>
<g >
<title>posix_cpu_timers_work (5,983,265,332 samples, 0.02%)</title><rect x="952.8" y="213" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="955.76" y="223.5" ></text>
</g>
<g >
<title>__gmpf_add (13,384,240,594 samples, 0.05%)</title><rect x="239.7" y="325" width="0.5" height="15.0" fill="rgb(251,216,51)" rx="2" ry="2" />
<text  x="242.69" y="335.5" ></text>
</g>
<g >
<title>__gmpn_mul (12,912,301,691 samples, 0.04%)</title><rect x="338.3" y="245" width="0.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="341.27" y="255.5" ></text>
</g>
<g >
<title>main (405,953,749,875 samples, 1.41%)</title><rect x="1154.3" y="421" width="16.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1157.32" y="431.5" ></text>
</g>
<g >
<title>__gmp_temp&lt;__mpf_struct [1]&gt;::__get_mp (2,845,080,058 samples, 0.01%)</title><rect x="953.5" y="357" width="0.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="956.50" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,155,052,095 samples, 0.02%)</title><rect x="1127.4" y="357" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1130.36" y="367.5" ></text>
</g>
<g >
<title>__gmpn_copyi (8,254,518,352 samples, 0.03%)</title><rect x="1165.8" y="405" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1168.77" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,478,534,069 samples, 0.01%)</title><rect x="998.6" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1001.60" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,283,739,852 samples, 0.02%)</title><rect x="952.4" y="245" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="955.42" y="255.5" ></text>
</g>
<g >
<title>_mcount (5,591,223,528 samples, 0.02%)</title><rect x="1161.3" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1164.30" y="399.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (23,966,354,187 samples, 0.08%)</title><rect x="1179.1" y="277" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1182.14" y="287.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__gmp_resolve_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::value_type, __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; operator*&lt;__mpf_struct [1], __mpf_struct [1], __mpf_struct [1], __mpf_struct [1]&gt; (2,062,355,368,363 samples, 7.16%)</title><rect x="10.4" y="389" width="84.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="13.41" y="399.5" >__gmp_exp..</text>
</g>
<g >
<title>unmap_vmas (65,916,954,243 samples, 0.23%)</title><rect x="1185.8" y="229" width="2.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1188.76" y="239.5" ></text>
</g>
<g >
<title>_int_free (19,650,162,422 samples, 0.07%)</title><rect x="1171.3" y="437" width="0.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1174.30" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (8,458,458,274 samples, 0.03%)</title><rect x="1171.0" y="421" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1173.95" y="431.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;::eval (54,282,089,389 samples, 0.19%)</title><rect x="1133.0" y="277" width="2.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1136.03" y="287.5" ></text>
</g>
<g >
<title>[unknown] (27,778,234,654,032 samples, 96.43%)</title><rect x="10.0" y="437" width="1137.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.03" y="447.5" >[unknown]</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3,863,140,938 samples, 0.01%)</title><rect x="474.3" y="229" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="477.34" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (23,345,572,565 samples, 0.08%)</title><rect x="1163.0" y="325" width="0.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1165.95" y="335.5" ></text>
</g>
<g >
<title>__mcount_internal (45,696,188,671 samples, 0.16%)</title><rect x="1143.6" y="373" width="1.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1146.62" y="383.5" ></text>
</g>
<g >
<title>__mcount_internal (1,383,370,124,096 samples, 4.80%)</title><rect x="281.2" y="309" width="56.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="284.25" y="319.5" >__mcou..</text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;, __gmp_binary_plus&gt; &gt;::__gmp_expr (17,938,340,271 samples, 0.06%)</title><rect x="1129.3" y="357" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1132.32" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4,973,866,192 samples, 0.02%)</title><rect x="1180.4" y="277" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1183.42" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (9,667,764,415 samples, 0.03%)</title><rect x="1145.5" y="405" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1148.54" y="415.5" ></text>
</g>
<g >
<title>__gmp_temp&lt;__mpf_struct [1]&gt;::__get_mp (972,162,411,569 samples, 3.37%)</title><rect x="240.5" y="341" width="39.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="243.54" y="351.5" >__g..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="405" width="2.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1188.75" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,879,126,913 samples, 0.01%)</title><rect x="474.5" y="197" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="477.51" y="207.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;&amp; __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::operator+=&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; (22,064,100,671,530 samples, 76.60%)</title><rect x="94.9" y="389" width="903.8" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="97.90" y="399.5" >__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;&amp; __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::operator+=&lt;__mpf_struct [1], ..</text>
</g>
<g >
<title>exit_to_user_mode_loop (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="373" width="2.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1188.75" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2,929,131,158 samples, 0.01%)</title><rect x="1179.9" y="213" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1182.87" y="223.5" ></text>
</g>
<g >
<title>__munmap (8,458,458,274 samples, 0.03%)</title><rect x="1171.0" y="437" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1173.95" y="447.5" ></text>
</g>
<g >
<title>GOMP_parallel (431,042,084,296 samples, 1.50%)</title><rect x="1127.8" y="405" width="17.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1130.85" y="415.5" ></text>
</g>
<g >
<title>page_remove_rmap (16,512,554,143 samples, 0.06%)</title><rect x="1186.2" y="149" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1189.19" y="159.5" ></text>
</g>
<g >
<title>inner_product_g (28,805,988,358,625 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >inner_product_g</text>
</g>
<g >
<title>void __gmp_set_expr&lt;__gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;, __gmp_binary_plus&gt; &gt; (18,541,138,100,334 samples, 64.37%)</title><rect x="239.2" y="373" width="759.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="242.21" y="383.5" >void __gmp_set_expr&lt;__gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_st..</text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4,721,852,140 samples, 0.02%)</title><rect x="1178.5" y="293" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1181.49" y="303.5" ></text>
</g>
<g >
<title>__mcount_internal (2,438,458,364,635 samples, 8.47%)</title><rect x="139.3" y="373" width="99.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="142.26" y="383.5" >__mcount_int..</text>
</g>
<g >
<title>free_pcppages_bulk (7,898,002,440 samples, 0.03%)</title><rect x="1187.5" y="53" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1190.51" y="63.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::operator= (151,216,401,805 samples, 0.52%)</title><rect x="1155.3" y="405" width="6.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1158.34" y="415.5" ></text>
</g>
<g >
<title>mas_walk (4,534,336,316 samples, 0.02%)</title><rect x="1184.6" y="357" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1187.63" y="367.5" ></text>
</g>
<g >
<title>__handle_mm_fault (24,051,918,211 samples, 0.08%)</title><rect x="1164.3" y="325" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1167.34" y="335.5" ></text>
</g>
<g >
<title>__gmpf_clear (7,086,488,836 samples, 0.02%)</title><rect x="1161.6" y="405" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1164.59" y="415.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (4,695,216,338 samples, 0.02%)</title><rect x="1171.1" y="197" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1174.10" y="207.5" ></text>
</g>
<g >
<title>blk_cgroup_congested (3,851,443,708 samples, 0.01%)</title><rect x="1177.5" y="293" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1180.46" y="303.5" ></text>
</g>
<g >
<title>__gmpf_set (3,297,889,773 samples, 0.01%)</title><rect x="1165.5" y="405" width="0.2" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="1168.53" y="415.5" ></text>
</g>
<g >
<title>do_vmi_munmap (8,355,960,904 samples, 0.03%)</title><rect x="1171.0" y="357" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1173.95" y="367.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3,433,953,582 samples, 0.01%)</title><rect x="1127.4" y="341" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1130.36" y="351.5" ></text>
</g>
<g >
<title>irqentry_exit (6,785,206,439 samples, 0.02%)</title><rect x="952.7" y="293" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="955.73" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit (2,477,833,888 samples, 0.01%)</title><rect x="1127.5" y="341" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1130.51" y="351.5" ></text>
</g>
<g >
<title>lru_add_fn (18,622,416,110 samples, 0.06%)</title><rect x="1179.3" y="261" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1182.31" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (7,144,182,035 samples, 0.02%)</title><rect x="1165.0" y="229" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1167.97" y="239.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::__gmp_expr (4,559,303,009 samples, 0.02%)</title><rect x="1155.1" y="405" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1158.15" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (8,458,458,274 samples, 0.03%)</title><rect x="1171.0" y="389" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1173.95" y="399.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (260,770,558,828 samples, 0.91%)</title><rect x="1174.6" y="421" width="10.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1177.58" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (4,811,652,146 samples, 0.02%)</title><rect x="1171.1" y="229" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1174.10" y="239.5" ></text>
</g>
<g >
<title>do_exit (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="309" width="2.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1188.75" y="319.5" ></text>
</g>
<g >
<title>vma_alloc_folio (9,030,805,183 samples, 0.03%)</title><rect x="1163.5" y="277" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1166.50" y="287.5" ></text>
</g>
<g >
<title>inc_mm_counter (2,543,333,526 samples, 0.01%)</title><rect x="1180.7" y="309" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1183.73" y="319.5" ></text>
</g>
<g >
<title>__gmpf_init (3,964,226,086 samples, 0.01%)</title><rect x="1162.0" y="405" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1165.01" y="415.5" ></text>
</g>
<g >
<title>[unknown] (431,152,753,690 samples, 1.50%)</title><rect x="1127.8" y="421" width="17.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1130.85" y="431.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3,399,053,682 samples, 0.01%)</title><rect x="1188.2" y="53" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1191.19" y="63.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (8,714,669,720 samples, 0.03%)</title><rect x="1180.3" y="293" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1183.29" y="303.5" ></text>
</g>
<g >
<title>__gmp_binary_plus::eval (18,040,834,828 samples, 0.06%)</title><rect x="239.7" y="341" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="242.68" y="351.5" ></text>
</g>
<g >
<title>do_anonymous_page (21,022,872,531 samples, 0.07%)</title><rect x="1164.4" y="293" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1167.42" y="303.5" ></text>
</g>
<g >
<title>__gmpn_copyi (3,380,601,848 samples, 0.01%)</title><rect x="338.9" y="261" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="341.90" y="271.5" ></text>
</g>
<g >
<title>__gmp_temp&lt;__mpf_struct [1]&gt;::__gmp_temp&lt;__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; &gt; (7,137,498,281,091 samples, 24.78%)</title><rect x="280.4" y="341" width="292.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="283.37" y="351.5" >__gmp_temp&lt;__mpf_struct [1]&gt;::__gmp_tem..</text>
</g>
<g >
<title>__pte_offset_map_lock (3,526,007,593 samples, 0.01%)</title><rect x="1178.8" y="309" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1181.75" y="319.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (8,355,960,904 samples, 0.03%)</title><rect x="1171.0" y="341" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1173.95" y="351.5" ></text>
</g>
<g >
<title>__mcount_internal (1,128,623,373,728 samples, 3.92%)</title><rect x="10.4" y="357" width="46.3" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="13.44" y="367.5" >__mc..</text>
</g>
<g >
<title>__mcount_internal (15,769,344,022 samples, 0.05%)</title><rect x="1136.0" y="309" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1139.00" y="319.5" ></text>
</g>
<g >
<title>zap_pte_range (7,406,265,627 samples, 0.03%)</title><rect x="1171.0" y="245" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1173.99" y="255.5" ></text>
</g>
<g >
<title>mmput (66,056,614,803 samples, 0.23%)</title><rect x="1185.8" y="277" width="2.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1188.75" y="287.5" ></text>
</g>
<g >
<title>exc_page_fault (29,891,385,993 samples, 0.10%)</title><rect x="1164.2" y="373" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1167.22" y="383.5" ></text>
</g>
<g >
<title>unmap_page_range (8,334,301,484 samples, 0.03%)</title><rect x="1171.0" y="277" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1173.96" y="287.5" ></text>
</g>
<g >
<title>__vm_munmap (8,458,458,274 samples, 0.03%)</title><rect x="1171.0" y="373" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1173.95" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (10,136,889,557 samples, 0.04%)</title><rect x="1186.4" y="133" width="0.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1189.36" y="143.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (6,662,810,587 samples, 0.02%)</title><rect x="952.7" y="245" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="955.74" y="255.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;::__gmp_expr (20,085,420,567 samples, 0.07%)</title><rect x="1127.9" y="357" width="0.8" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1130.86" y="367.5" ></text>
</g>
<g >
<title>_mcount (15,675,503,533 samples, 0.05%)</title><rect x="1159.7" y="357" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1162.69" y="367.5" ></text>
</g>
<g >
<title>do_anonymous_page (20,098,010,472 samples, 0.07%)</title><rect x="1163.0" y="293" width="0.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1166.05" y="303.5" ></text>
</g>
<g >
<title>posix_cpu_timers_work (2,558,412,425 samples, 0.01%)</title><rect x="474.5" y="149" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="477.52" y="159.5" ></text>
</g>
<g >
<title>__mcount_internal (18,185,358,605 samples, 0.06%)</title><rect x="1135.3" y="277" width="0.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1138.26" y="287.5" ></text>
</g>
<g >
<title>__gmpf_mul (20,373,292,917 samples, 0.07%)</title><rect x="338.1" y="261" width="0.8" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="341.07" y="271.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (5,698,050,594 samples, 0.02%)</title><rect x="952.8" y="165" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="955.76" y="175.5" ></text>
</g>
<g >
<title>malloc (3,164,704,489 samples, 0.01%)</title><rect x="1170.8" y="405" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1173.82" y="415.5" ></text>
</g>
<g >
<title>__gmp_temp&lt;__mpf_struct [1]&gt;::__gmp_temp&lt;__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; &gt; (112,097,553,892 samples, 0.39%)</title><rect x="1132.1" y="325" width="4.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1135.06" y="335.5" ></text>
</g>
<g >
<title>__mcount_internal (16,012,011,329 samples, 0.06%)</title><rect x="1136.7" y="309" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1139.65" y="319.5" ></text>
</g>
<g >
<title>try_charge_memcg (3,336,608,518 samples, 0.01%)</title><rect x="1178.4" y="277" width="0.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1181.35" y="287.5" ></text>
</g>
<g >
<title>exc_page_fault (29,237,848,176 samples, 0.10%)</title><rect x="1162.8" y="373" width="1.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1165.84" y="383.5" ></text>
</g>
<g >
<title>irqentry_exit (2,895,826,540 samples, 0.01%)</title><rect x="474.5" y="229" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="477.51" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (31,643,510,221 samples, 0.11%)</title><rect x="1162.7" y="389" width="1.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1165.75" y="399.5" ></text>
</g>
<g >
<title>get_page_from_freelist (55,364,713,045 samples, 0.19%)</title><rect x="1181.4" y="261" width="2.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1184.44" y="271.5" ></text>
</g>
<g >
<title>do_brk_flags (7,221,018,931 samples, 0.03%)</title><rect x="1145.6" y="341" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1148.59" y="351.5" ></text>
</g>
<g >
<title>exit_mmap (66,056,614,803 samples, 0.23%)</title><rect x="1185.8" y="245" width="2.7" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1188.75" y="255.5" ></text>
</g>
<g >
<title>_mcount (28,530,417,781 samples, 0.10%)</title><rect x="1168.8" y="405" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1171.77" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,853,807,919 samples, 0.01%)</title><rect x="238.9" y="325" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="241.93" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (2,853,824,590 samples, 0.01%)</title><rect x="474.5" y="181" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="477.51" y="191.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;::__gmp_expr (1,129,609,713,860 samples, 3.92%)</title><rect x="10.4" y="373" width="46.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="13.43" y="383.5" >__gm..</text>
</g>
<g >
<title>__mcount_internal (15,393,905,844 samples, 0.05%)</title><rect x="1128.7" y="357" width="0.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1131.68" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,461,122,153 samples, 0.01%)</title><rect x="1127.5" y="309" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1130.51" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7,080,736,315 samples, 0.02%)</title><rect x="474.3" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="477.34" y="271.5" ></text>
</g>
<g >
<title>perf_event_mmap (2,575,279,236 samples, 0.01%)</title><rect x="1145.7" y="325" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1148.74" y="335.5" ></text>
</g>
<g >
<title>__gmp_binary_multiplies::eval (24,037,274,947 samples, 0.08%)</title><rect x="338.1" y="277" width="0.9" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="341.06" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (65,916,954,243 samples, 0.23%)</title><rect x="1185.8" y="197" width="2.7" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1188.76" y="207.5" ></text>
</g>
<g >
<title>__count_memcg_events (2,574,682,983 samples, 0.01%)</title><rect x="1178.2" y="277" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="1181.23" y="287.5" ></text>
</g>
<g >
<title>handle_pte_fault (22,370,821,568 samples, 0.08%)</title><rect x="1164.4" y="309" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1167.40" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (24,749,811,667 samples, 0.09%)</title><rect x="1162.9" y="341" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1165.92" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_brk (8,962,710,118 samples, 0.03%)</title><rect x="1145.6" y="373" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1148.55" y="383.5" ></text>
</g>
<g >
<title>__mcount_internal (1,289,125,112,869 samples, 4.48%)</title><rect x="519.9" y="325" width="52.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="522.88" y="335.5" >__mco..</text>
</g>
<g >
<title>void __gmp_set_expr&lt;__gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; (72,516,315,049 samples, 0.25%)</title><rect x="1133.0" y="293" width="3.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1136.03" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (6,763,806,803 samples, 0.02%)</title><rect x="952.7" y="277" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="955.73" y="287.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (13,103,203,499 samples, 0.05%)</title><rect x="1180.2" y="309" width="0.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1183.19" y="319.5" ></text>
</g>
<g >
<title>__brk (10,433,363,274 samples, 0.04%)</title><rect x="1145.5" y="421" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1148.51" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,458,458,274 samples, 0.03%)</title><rect x="1171.0" y="405" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1173.95" y="415.5" ></text>
</g>
<g >
<title>clear_mpf_vec (7,188,947,013 samples, 0.02%)</title><rect x="1170.2" y="405" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1173.17" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5,094,602,770 samples, 0.02%)</title><rect x="1188.1" y="69" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1191.13" y="79.5" ></text>
</g>
<g >
<title>malloc (28,990,506,498 samples, 0.10%)</title><rect x="1188.5" y="437" width="1.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1191.46" y="447.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (38,462,162,447 samples, 0.13%)</title><rect x="1186.9" y="133" width="1.5" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1189.87" y="143.5" ></text>
</g>
<g >
<title>arch_do_signal_or_restart (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="357" width="2.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1188.75" y="367.5" ></text>
</g>
<g >
<title>clear_page_rep (4,991,923,830 samples, 0.02%)</title><rect x="1163.6" y="213" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1166.58" y="223.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6,752,108,149 samples, 0.02%)</title><rect x="952.7" y="261" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="955.73" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (4,987,163,571 samples, 0.02%)</title><rect x="952.5" y="229" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="955.48" y="239.5" ></text>
</g>
<g >
<title>__lock_task_sighand (5,712,436,322 samples, 0.02%)</title><rect x="952.8" y="197" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="955.76" y="207.5" ></text>
</g>
<g >
<title>__mcount_internal (1,102,028,626,354 samples, 3.83%)</title><rect x="474.7" y="293" width="45.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="477.71" y="303.5" >__mc..</text>
</g>
<g >
<title>void __gmp_set_expr&lt;__gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;, __gmp_binary_plus&gt; &gt; (299,414,343,614 samples, 1.04%)</title><rect x="1131.4" y="357" width="12.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1134.36" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (207,496,577,203 samples, 0.72%)</title><rect x="1175.9" y="373" width="8.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1178.94" y="383.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (3,834,068,923 samples, 0.01%)</title><rect x="474.3" y="213" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="477.34" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (27,339,455,626 samples, 0.09%)</title><rect x="1162.9" y="357" width="1.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1165.88" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,846,955,723 samples, 0.01%)</title><rect x="238.9" y="309" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="241.93" y="319.5" ></text>
</g>
<g >
<title>charge_memcg (12,421,387,753 samples, 0.04%)</title><rect x="1178.0" y="293" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1180.98" y="303.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; (5,825,988,268,043 samples, 20.22%)</title><rect x="281.2" y="325" width="238.7" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="284.21" y="335.5" >__gmp_expr&lt;__mpf_struct [1], __..</text>
</g>
<g >
<title>[libgomp.so.1.0.0] (27,288,157,884,672 samples, 94.73%)</title><rect x="10.0" y="421" width="1117.8" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.03" y="431.5" >[libgomp.so.1.0.0]</text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::swap (123,349,374,709 samples, 0.43%)</title><rect x="1155.4" y="389" width="5.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1158.40" y="399.5" ></text>
</g>
<g >
<title>__gmpn_mul_basecase (37,272,241,723 samples, 0.13%)</title><rect x="1152.7" y="437" width="1.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1155.65" y="447.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (5,674,848,194 samples, 0.02%)</title><rect x="1169.9" y="405" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1172.94" y="415.5" ></text>
</g>
<g >
<title>lru_gen_del_folio.constprop.0 (11,552,402,359 samples, 0.04%)</title><rect x="1187.9" y="85" width="0.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1190.93" y="95.5" ></text>
</g>
<g >
<title>init_mpf_vec (8,468,611,366 samples, 0.03%)</title><rect x="1170.5" y="405" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1173.47" y="415.5" ></text>
</g>
<g >
<title>_mcount (3,385,977,690 samples, 0.01%)</title><rect x="1127.6" y="389" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1130.62" y="399.5" ></text>
</g>
<g >
<title>_int_malloc (330,326,750,372 samples, 1.15%)</title><rect x="1172.1" y="437" width="13.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1175.11" y="447.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (3,386,540,180 samples, 0.01%)</title><rect x="1164.5" y="277" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1167.53" y="287.5" ></text>
</g>
<g >
<title>release_pages (36,375,234,232 samples, 0.13%)</title><rect x="1186.9" y="101" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1189.93" y="111.5" ></text>
</g>
<g >
<title>unmap_vmas (8,334,301,484 samples, 0.03%)</title><rect x="1171.0" y="309" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1173.96" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4,466,862,262 samples, 0.02%)</title><rect x="1179.8" y="229" width="0.2" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="1182.82" y="239.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2,623,661,232 samples, 0.01%)</title><rect x="1180.5" y="261" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1183.47" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (25,659,330,566 samples, 0.09%)</title><rect x="1177.7" y="309" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1180.68" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="437" width="2.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1188.75" y="447.5" ></text>
</g>
<g >
<title>unmap_single_vma (65,916,954,243 samples, 0.23%)</title><rect x="1185.8" y="213" width="2.7" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1188.76" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (7,797,844,776 samples, 0.03%)</title><rect x="1163.5" y="245" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1166.53" y="255.5" ></text>
</g>
<g >
<title>__libc_start_call_main (409,447,283,054 samples, 1.42%)</title><rect x="1154.2" y="437" width="16.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1157.18" y="447.5" ></text>
</g>
<g >
<title>__mcount_internal (53,729,141,964 samples, 0.19%)</title><rect x="1133.1" y="261" width="2.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1136.05" y="271.5" ></text>
</g>
<g >
<title>_int_free (32,279,111,132 samples, 0.11%)</title><rect x="1146.6" y="421" width="1.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1149.60" y="431.5" ></text>
</g>
<g >
<title>handle_pte_fault (21,535,680,074 samples, 0.07%)</title><rect x="1163.0" y="309" width="0.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1166.02" y="319.5" ></text>
</g>
<g >
<title>__mcount_internal (20,472,067,774 samples, 0.07%)</title><rect x="1160.5" y="389" width="0.8" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1163.46" y="399.5" ></text>
</g>
<g >
<title>task_work_run (6,080,560,693 samples, 0.02%)</title><rect x="952.8" y="229" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="955.76" y="239.5" ></text>
</g>
<g >
<title>__mcount_internal (971,126,499,132 samples, 3.37%)</title><rect x="240.6" y="325" width="39.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="243.56" y="335.5" >__m..</text>
</g>
<g >
<title>irqentry_exit (5,522,089,722 samples, 0.02%)</title><rect x="1184.9" y="389" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1187.89" y="399.5" ></text>
</g>
<g >
<title>__gmp_temp&lt;__mpf_struct [1]&gt;::~__gmp_temp (16,043,348,168 samples, 0.06%)</title><rect x="1136.7" y="325" width="0.6" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1139.65" y="335.5" ></text>
</g>
<g >
<title>__gmp_temp&lt;__mpf_struct [1]&gt;::__get_mp (16,443,029,602 samples, 0.06%)</title><rect x="1131.4" y="325" width="0.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1134.39" y="335.5" ></text>
</g>
<g >
<title>__gmpf_init2 (46,732,060,080 samples, 0.16%)</title><rect x="1162.2" y="405" width="1.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1165.17" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages (7,981,372,589 samples, 0.03%)</title><rect x="1164.9" y="245" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1167.94" y="255.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;, __gmp_binary_plus&gt; &gt;::eval (17,433,859,487,336 samples, 60.52%)</title><rect x="239.3" y="357" width="714.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="242.33" y="367.5" >__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __g..</text>
</g>
<g >
<title>clear_page_rep (40,767,952,318 samples, 0.14%)</title><rect x="1181.6" y="245" width="1.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1184.61" y="255.5" ></text>
</g>
<g >
<title>__folio_alloc (8,243,020,902 samples, 0.03%)</title><rect x="1164.9" y="261" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1167.93" y="271.5" ></text>
</g>
<g >
<title>release_pages (4,584,047,097 samples, 0.02%)</title><rect x="1171.1" y="181" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1174.10" y="191.5" ></text>
</g>
<g >
<title>do_anonymous_page (171,531,713,410 samples, 0.60%)</title><rect x="1176.9" y="325" width="7.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1179.88" y="335.5" ></text>
</g>
<g >
<title>unmap_region (8,353,911,599 samples, 0.03%)</title><rect x="1171.0" y="325" width="0.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1173.95" y="335.5" ></text>
</g>
<g >
<title>__gmpf_urandomb (13,799,955,057 samples, 0.05%)</title><rect x="1146.0" y="421" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1149.03" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (7,638,145,736 samples, 0.03%)</title><rect x="952.4" y="277" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="955.40" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7,044,592,476 samples, 0.02%)</title><rect x="474.3" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="477.34" y="255.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (4,838,019,184 samples, 0.02%)</title><rect x="1183.5" y="229" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1186.50" y="239.5" ></text>
</g>
<g >
<title>__gmp_temp&lt;__mpf_struct [1]&gt;::~__gmp_temp (991,596,284,089 samples, 3.44%)</title><rect x="572.7" y="341" width="40.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="575.75" y="351.5" >__g..</text>
</g>
<g >
<title>tick_sched_timer (2,746,453,500 samples, 0.01%)</title><rect x="1127.4" y="293" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1130.38" y="303.5" ></text>
</g>
<g >
<title>sysmalloc (8,664,188,568 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1192.65" y="447.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (12,800,551,177 samples, 0.04%)</title><rect x="1179.5" y="245" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1182.54" y="255.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;&amp; __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;::operator+=&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; (349,401,405,568 samples, 1.21%)</title><rect x="1129.3" y="373" width="14.3" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1132.31" y="383.5" ></text>
</g>
<g >
<title>mtree_range_walk (2,693,857,036 samples, 0.01%)</title><rect x="1184.7" y="341" width="0.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1187.71" y="351.5" ></text>
</g>
<g >
<title>handle_pte_fault (5,407,084,894 samples, 0.02%)</title><rect x="1189.7" y="341" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.73" y="351.5" ></text>
</g>
<g >
<title>__mcount_internal (8,291,362,296,181 samples, 28.78%)</title><rect x="613.4" y="341" width="339.6" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="616.38" y="351.5" >__mcount_internal</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (65,915,891,992 samples, 0.23%)</title><rect x="1185.8" y="181" width="2.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1188.76" y="191.5" ></text>
</g>
<g >
<title>task_work_run (2,591,316,443 samples, 0.01%)</title><rect x="474.5" y="165" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="477.52" y="175.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (38,462,162,447 samples, 0.13%)</title><rect x="1186.9" y="149" width="1.5" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1189.87" y="159.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;__mpf_struct&amp;&gt;::type&amp;&amp; std::move&lt;__mpf_struct&amp;&gt; (3,039,041,986 samples, 0.01%)</title><rect x="1160.3" y="357" width="0.2" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1163.33" y="367.5" ></text>
</g>
<g >
<title>__mcount_internal (3,146,481,651,712 samples, 10.92%)</title><rect x="998.7" y="389" width="128.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1001.73" y="399.5" >__mcount_internal</text>
</g>
<g >
<title>__mcount_internal (1,099,655,193,904 samples, 3.82%)</title><rect x="953.7" y="357" width="45.0" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="956.65" y="367.5" >__mc..</text>
</g>
<g >
<title>__mcount_internal (73,545,532,903 samples, 0.26%)</title><rect x="1156.7" y="357" width="3.0" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1159.67" y="367.5" ></text>
</g>
<g >
<title>__folio_alloc (8,054,502,883 samples, 0.03%)</title><rect x="1163.5" y="261" width="0.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1166.53" y="271.5" ></text>
</g>
<g >
<title>clear_page_rep (5,377,017,763 samples, 0.02%)</title><rect x="1165.0" y="213" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1167.99" y="223.5" ></text>
</g>
<g >
<title>void __gmp_set_expr&lt;__gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt; (4,441,181,791,856 samples, 15.42%)</title><rect x="337.9" y="309" width="182.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="340.94" y="319.5" >void __gmp_set_expr&lt;__g..</text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (5,748,134,680 samples, 0.02%)</title><rect x="1187.1" y="85" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.07" y="95.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3,845,428,963 samples, 0.01%)</title><rect x="1184.9" y="357" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1187.93" y="367.5" ></text>
</g>
<g >
<title>get_page_from_freelist (6,897,257,272 samples, 0.02%)</title><rect x="1163.6" y="229" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1166.56" y="239.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (5,488,680,985 samples, 0.02%)</title><rect x="952.8" y="149" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="955.77" y="159.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;::eval (3,336,964,682,242 samples, 11.58%)</title><rect x="338.0" y="293" width="136.7" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="341.00" y="303.5" >__gmp_expr&lt;__mpf_..</text>
</g>
<g >
<title>folio_add_lru_vma (28,189,319,729 samples, 0.10%)</title><rect x="1179.0" y="309" width="1.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1182.03" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,084,452,329 samples, 0.01%)</title><rect x="1127.4" y="309" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1130.37" y="319.5" ></text>
</g>
<g >
<title>__gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __gmp_binary_expr&lt;__gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_expr&lt;__mpf_struct [1], __mpf_struct [1]&gt;, __gmp_binary_multiplies&gt; &gt;, __gmp_binary_plus&gt; &gt;::eval (279,223,770,943 samples, 0.97%)</title><rect x="1131.4" y="341" width="11.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1134.36" y="351.5" ></text>
</g>
<g >
<title>vma_alloc_folio (9,297,220,083 samples, 0.03%)</title><rect x="1164.9" y="277" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1167.90" y="287.5" ></text>
</g>
<g >
<title>__folio_alloc (64,245,780,608 samples, 0.22%)</title><rect x="1181.2" y="293" width="2.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1184.17" y="303.5" ></text>
</g>
<g >
<title>__free_one_page (6,237,905,577 samples, 0.02%)</title><rect x="1187.6" y="37" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1190.57" y="47.5" ></text>
</g>
<g >
<title>__mcount_internal (133,811,052,210 samples, 0.46%)</title><rect x="1137.3" y="325" width="5.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1140.31" y="335.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2,886,023,451 samples, 0.01%)</title><rect x="474.5" y="213" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="477.51" y="223.5" ></text>
</g>
<g >
<title>free_unref_page_list (14,321,060,203 samples, 0.05%)</title><rect x="1187.3" y="85" width="0.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1190.33" y="95.5" ></text>
</g>
<g >
<title>__mcount_internal (3,309,622,108,713 samples, 11.49%)</title><rect x="339.1" y="277" width="135.5" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="342.05" y="287.5" >__mcount_internal</text>
</g>
<g >
<title>sync_regs (2,531,351,109 samples, 0.01%)</title><rect x="1185.5" y="421" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1188.54" y="431.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (32,157,166,886 samples, 0.11%)</title><rect x="1164.1" y="389" width="1.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1167.14" y="399.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (5,701,013,970 samples, 0.02%)</title><rect x="952.8" y="181" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="955.76" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,462,327,649 samples, 0.01%)</title><rect x="998.6" y="325" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1001.60" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,215,751,017 samples, 0.02%)</title><rect x="1127.4" y="373" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1130.36" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (3,118,029,993 samples, 0.01%)</title><rect x="474.4" y="181" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="477.35" y="191.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (2,867,481,777 samples, 0.01%)</title><rect x="1184.2" y="357" width="0.1" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="1187.20" y="367.5" ></text>
</g>
<g >
<title>vma_alloc_folio (71,975,873,807 samples, 0.25%)</title><rect x="1181.0" y="309" width="2.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1183.96" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (5,800,386,707 samples, 0.02%)</title><rect x="1189.7" y="357" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.72" y="367.5" ></text>
</g>
<g >
<title>__mcount_internal (64,727,442,501 samples, 0.22%)</title><rect x="1166.1" y="405" width="2.7" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1169.11" y="415.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (66,058,725,650 samples, 0.23%)</title><rect x="1185.8" y="389" width="2.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1188.75" y="399.5" ></text>
</g>
<g >
<title>handle_mm_fault (25,488,007,648 samples, 0.09%)</title><rect x="1164.3" y="341" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1167.31" y="351.5" ></text>
</g>
<g >
<title>__gmpf_init (33,593,931,938 samples, 0.12%)</title><rect x="1164.1" y="405" width="1.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1167.13" y="415.5" ></text>
</g>
<g >
<title>__mcount_internal (1,076,573,928,013 samples, 3.74%)</title><rect x="95.1" y="357" width="44.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="98.13" y="367.5" >__mc..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,755,355,920 samples, 0.01%)</title><rect x="337.8" y="277" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="340.80" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,380,074,508 samples, 0.03%)</title><rect x="1145.5" y="389" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1148.55" y="399.5" ></text>
</g>
<g >
<title>__gmp_default_allocate (12,452,472,424 samples, 0.04%)</title><rect x="280.7" y="325" width="0.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="283.70" y="335.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (8,333,769,129 samples, 0.03%)</title><rect x="1171.0" y="261" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1173.96" y="271.5" ></text>
</g>
<g >
<title>zap_pte_range (63,900,232,552 samples, 0.22%)</title><rect x="1185.8" y="165" width="2.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1188.84" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,935,034,492 samples, 0.02%)</title><rect x="952.4" y="261" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="955.40" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,711,072,696 samples, 0.01%)</title><rect x="1185.6" y="437" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1188.64" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages (62,173,165,836 samples, 0.22%)</title><rect x="1181.2" y="277" width="2.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1184.19" y="287.5" ></text>
</g>
<g >
<title>scheduler_tick (3,663,780,498 samples, 0.01%)</title><rect x="952.5" y="197" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="955.53" y="207.5" ></text>
</g>
<g >
<title>std::enable_if&lt;std::__and_&lt;std::__not_&lt;std::__is_tuple_like&lt;__mpf_struct&gt; &gt;, std::is_move_constructible&lt;__mpf_struct&gt;, std::is_move_assignable&lt;__mpf_struct&gt; &gt;::value, void&gt;::type std::swap&lt;__mpf_struct&gt; (101,266,133,795 samples, 0.35%)</title><rect x="1156.3" y="373" width="4.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1159.31" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,288,787,327 samples, 0.02%)</title><rect x="238.9" y="357" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="241.93" y="367.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (3,230,004,618 samples, 0.01%)</title><rect x="1163.1" y="277" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1166.15" y="287.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (37,852,472,499 samples, 0.13%)</title><rect x="1186.9" y="117" width="1.5" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1189.87" y="127.5" ></text>
</g>
<g >
<title>Rdot (27,284,345,656,850 samples, 94.72%)</title><rect x="10.2" y="405" width="1117.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="13.16" y="415.5" >Rdot</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15,268,337,891 samples, 0.05%)</title><rect x="952.4" y="325" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="955.39" y="335.5" ></text>
</g>
<g >
<title>Rdot (431,019,635,451 samples, 1.50%)</title><rect x="1127.8" y="389" width="17.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1130.85" y="399.5" ></text>
</g>
<g >
<title>unmap_single_vma (8,334,301,484 samples, 0.03%)</title><rect x="1171.0" y="293" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1173.96" y="303.5" ></text>
</g>
<g >
<title>__gmp_randget_mt (95,462,561,122 samples, 0.33%)</title><rect x="1148.7" y="437" width="3.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1151.74" y="447.5" ></text>
</g>
<g >
<title>rmqueue_bulk (3,250,006,853 samples, 0.01%)</title><rect x="1183.6" y="213" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1186.57" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,448,692,996 samples, 0.01%)</title><rect x="474.3" y="197" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="477.34" y="207.5" ></text>
</g>
<g >
<title>folio_add_lru (28,069,464,766 samples, 0.10%)</title><rect x="1179.0" y="293" width="1.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1182.04" y="303.5" ></text>
</g>
<g >
<title>error_entry (2,618,935,292 samples, 0.01%)</title><rect x="1185.3" y="421" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1188.27" y="431.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,925,775,677 samples, 0.02%)</title><rect x="1189.7" y="325" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.74" y="335.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (4,488,613,793 samples, 0.02%)</title><rect x="1184.9" y="373" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1187.92" y="383.5" ></text>
</g>
</g>
</svg>
